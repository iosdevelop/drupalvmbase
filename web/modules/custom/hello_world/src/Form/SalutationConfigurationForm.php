<?php

namespace Drupal\hello_world\Form;

use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * Class SalutationConfigurationForm
 *
 * @package Drupal\hello_world\Form
 */
class SalutationConfigurationForm extends ConfigFormBase {

  /**
   * {@inheritdoc}
   */
  protected function getEditableConfigNames() {
    return ['hello_world.custom_salutation'];
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'salutation_configuration_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $config = $this->config('hello_world.custom_salutation');
    $form['#disable_inline_form_errors'] = FALSE;
    $form['salutation'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('Salutation'),
      '#description' => $this->t('Please provide the salutation you want to use.'),
      '#default_value' => $config->get('salutation'),
    );
    $form['color'] = array(
      '#type' => 'color',
      '#title' => $this->t('Color'),
      '#default_value' => $config->get('color'),
    );
    $form['settings']['active'] = array(
      '#type' => 'radios',
      '#title' => $this->t('Poll status'),
      '#default_value' => 1,
      '#options' => array(
        0 => $this->t('Closed'),
        1 => $this->t('Active'),
      ),
    );
    $form['quantity'] = array(
      '#type' => 'number',
      '#title' => $this->t('Quantity'),
      '#default_value' => $config->get('quantity'),
    );
    return parent::buildForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $this->config('hello_world.custom_salutation')
      ->set('salutation', $form_state->getValue('salutation'))
      ->set('quantity', $form_state->getValue('quantity'))
      ->set('color', $form_state->getValue('color'))

      ->save();

    parent::submitForm($form, $form_state);
  }

  public function validateForm(array &$form, FormStateInterface $form_state) {
    $quantity = $form_state->getValue('quantity');
    $salutation = $form_state->getValue('salutation');
    if (strlen($quantity) > 4){
      $form_state->setErrorByName('quantity',$this->t('Quantity should be less than 10,000.') );
    }
//    if (strlen($salutation) < 1) {
//      $form_state->setErrorByName('salutation',$this->t('The salutation is too short.') );
//    }
    parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
  }

}
